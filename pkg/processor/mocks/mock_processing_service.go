// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/thebartekbanach/imcaxy/pkg/processor (interfaces: ProcessingService)

// Package mock_processor is a generated GoMock package.
package mock_processor

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	hub "github.com/thebartekbanach/imcaxy/pkg/hub"
	processor "github.com/thebartekbanach/imcaxy/pkg/processor"
)

// MockProcessingService is a mock of ProcessingService interface.
type MockProcessingService struct {
	ctrl     *gomock.Controller
	recorder *MockProcessingServiceMockRecorder
}

// MockProcessingServiceMockRecorder is the mock recorder for MockProcessingService.
type MockProcessingServiceMockRecorder struct {
	mock *MockProcessingService
}

// NewMockProcessingService creates a new mock instance.
func NewMockProcessingService(ctrl *gomock.Controller) *MockProcessingService {
	mock := &MockProcessingService{ctrl: ctrl}
	mock.recorder = &MockProcessingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessingService) EXPECT() *MockProcessingServiceMockRecorder {
	return m.recorder
}

// ParseRequest mocks base method.
func (m *MockProcessingService) ParseRequest(arg0 string) (processor.ParsedRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseRequest", arg0)
	ret0, _ := ret[0].(processor.ParsedRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseRequest indicates an expected call of ParseRequest.
func (mr *MockProcessingServiceMockRecorder) ParseRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseRequest", reflect.TypeOf((*MockProcessingService)(nil).ParseRequest), arg0)
}

// ProcessImage mocks base method.
func (m *MockProcessingService) ProcessImage(arg0 context.Context, arg1 processor.ParsedRequest, arg2 hub.DataStreamInput) (string, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessImage", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ProcessImage indicates an expected call of ProcessImage.
func (mr *MockProcessingServiceMockRecorder) ProcessImage(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessImage", reflect.TypeOf((*MockProcessingService)(nil).ProcessImage), arg0, arg1, arg2)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/thebartekbanach/imcaxy/pkg/cache/repositories (interfaces: InvalidationsRepository)

// Package mock_cacherepositories is a generated GoMock package.
package mock_cacherepositories

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cacherepositories "github.com/thebartekbanach/imcaxy/pkg/cache/repositories"
)

// MockInvalidationsRepository is a mock of InvalidationsRepository interface.
type MockInvalidationsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockInvalidationsRepositoryMockRecorder
}

// MockInvalidationsRepositoryMockRecorder is the mock recorder for MockInvalidationsRepository.
type MockInvalidationsRepositoryMockRecorder struct {
	mock *MockInvalidationsRepository
}

// NewMockInvalidationsRepository creates a new mock instance.
func NewMockInvalidationsRepository(ctrl *gomock.Controller) *MockInvalidationsRepository {
	mock := &MockInvalidationsRepository{ctrl: ctrl}
	mock.recorder = &MockInvalidationsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvalidationsRepository) EXPECT() *MockInvalidationsRepositoryMockRecorder {
	return m.recorder
}

// CreateInvalidation mocks base method.
func (m *MockInvalidationsRepository) CreateInvalidation(arg0 context.Context, arg1 cacherepositories.InvalidationModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInvalidation", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInvalidation indicates an expected call of CreateInvalidation.
func (mr *MockInvalidationsRepositoryMockRecorder) CreateInvalidation(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvalidation", reflect.TypeOf((*MockInvalidationsRepository)(nil).CreateInvalidation), arg0, arg1)
}

// GetLatestInvalidation mocks base method.
func (m *MockInvalidationsRepository) GetLatestInvalidation(arg0 context.Context, arg1 string) (cacherepositories.InvalidationModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestInvalidation", arg0, arg1)
	ret0, _ := ret[0].(cacherepositories.InvalidationModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestInvalidation indicates an expected call of GetLatestInvalidation.
func (mr *MockInvalidationsRepositoryMockRecorder) GetLatestInvalidation(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestInvalidation", reflect.TypeOf((*MockInvalidationsRepository)(nil).GetLatestInvalidation), arg0, arg1)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/thebartekbanach/imcaxy/pkg/cache (interfaces: CacheService)

// Package mock_cache is a generated GoMock package.
package mock_cache

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cacherepositories "github.com/thebartekbanach/imcaxy/pkg/cache/repositories"
	hub "github.com/thebartekbanach/imcaxy/pkg/hub"
)

// MockCacheService is a mock of CacheService interface.
type MockCacheService struct {
	ctrl     *gomock.Controller
	recorder *MockCacheServiceMockRecorder
}

// MockCacheServiceMockRecorder is the mock recorder for MockCacheService.
type MockCacheServiceMockRecorder struct {
	mock *MockCacheService
}

// NewMockCacheService creates a new mock instance.
func NewMockCacheService(ctrl *gomock.Controller) *MockCacheService {
	mock := &MockCacheService{ctrl: ctrl}
	mock.recorder = &MockCacheServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheService) EXPECT() *MockCacheServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCacheService) Get(arg0 context.Context, arg1, arg2 string, arg3 hub.DataStreamInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockCacheServiceMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCacheService)(nil).Get), arg0, arg1, arg2, arg3)
}

// InvalidateAllEntriesForURL mocks base method.
func (m *MockCacheService) InvalidateAllEntriesForURL(arg0 context.Context, arg1 string) ([]cacherepositories.CachedImageModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvalidateAllEntriesForURL", arg0, arg1)
	ret0, _ := ret[0].([]cacherepositories.CachedImageModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InvalidateAllEntriesForURL indicates an expected call of InvalidateAllEntriesForURL.
func (mr *MockCacheServiceMockRecorder) InvalidateAllEntriesForURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvalidateAllEntriesForURL", reflect.TypeOf((*MockCacheService)(nil).InvalidateAllEntriesForURL), arg0, arg1)
}

// Save mocks base method.
func (m *MockCacheService) Save(arg0 context.Context, arg1 cacherepositories.CachedImageModel, arg2 hub.DataStreamOutput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockCacheServiceMockRecorder) Save(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockCacheService)(nil).Save), arg0, arg1, arg2)
}
